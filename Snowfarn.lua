-- Load Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Fanmarasas/dead/refs/heads/main/luaa.lua"))()

-- Create a custom theme for better visual appearance
local CustomTheme = {
   	SchemeColor = Color3.fromRGB(85, 170, 255),  -- Brighter blue for better visibility
    Background = Color3.fromRGB(15, 15, 25),     -- Darker background for contrast
    Header = Color3.fromRGB(10, 10, 20),         -- Even darker header for hierarchy
    TextColor = Color3.fromRGB(255, 255, 255),   -- White text for readability
    ElementColor = Color3.fromRGB(25, 25, 40) 
}

-- Create main window with custom theme
local Window = Library.CreateLib("‚ú® Snowfarn code Premium ‚ú®", CustomTheme)

-- Store all connections for easy cleanup
local Connections = {}

-- Store original game settings for restoration
local OriginalSettings = {
    Lighting = {
        Brightness = game:GetService("Lighting").Brightness,
        Ambient = game:GetService("Lighting").Ambient,
        OutdoorAmbient = game:GetService("Lighting").OutdoorAmbient
    },
    Atmosphere = {
        Density = (game:GetService("Lighting"):FindFirstChildOfClass("Atmosphere") and 
                  game:GetService("Lighting"):FindFirstChildOfClass("Atmosphere").Density or 0)
    },
    ColorCorrection = {
        Brightness = (game:GetService("Lighting"):FindFirstChildOfClass("ColorCorrectionEffect") and 
                     game:GetService("Lighting"):FindFirstChildOfClass("ColorCorrectionEffect").Brightness or 0)
    }
}

-- Function to disconnect all connections
local function DisconnectAll()
    for _, connection in pairs(Connections) do
        if typeof(connection) == "RBXScriptConnection" and connection.Connected then
            connection:Disconnect()
        end
    end
    Connections = {}
end

-- Function to remove all highlights
local HighlightEntities = {}
local function RemoveAllHighlights()
    for _, highlight in pairs(HighlightEntities) do
        if highlight and highlight.Parent then
            highlight:Destroy()
        end
    end
    HighlightEntities = {}
end

-- Function to add highlight to entity with custom effects
local function AddHighlightToEntity(entity, fillColor, outlineColor, fillTransparency, outlineTransparency)
    if entity:IsA("Model") and not entity:FindFirstChild("Highlight") then
        local parentFolder = entity.Parent
        
        -- Skip safe zones
        if parentFolder and parentFolder.Name == "SafeZones" then
            return
        end
        
        local newHighlight = Instance.new("Highlight")
        newHighlight.Parent = entity
        newHighlight.Adornee = entity
        newHighlight.FillColor = fillColor or Color3.fromRGB(255, 255, 255)
        newHighlight.OutlineColor = outlineColor or Color3.fromRGB(255, 255, 255)
        newHighlight.FillTransparency = fillTransparency or 0.3
        newHighlight.OutlineTransparency = outlineTransparency or 0.6
        
        table.insert(HighlightEntities, newHighlight)
        return newHighlight
    end
    return nil
end

-- Create info tab
local InfoTab = Window:NewTab("‚ÑπÔ∏è Information")
local InfoSection = InfoTab:NewSection("Welcome to Snowfarn code Premium")

InfoSection:NewLabel("üëã ‡∏ó‡∏≥‡πÇ‡∏î‡∏¢: Snowfarn ")
InfoSection:NewLabel("üåü ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô: 1.0 ")
InfoSection:NewLabel("üìÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏°‡∏µ.‡∏Ñ ")

-- Button to copy Discord invite
InfoSection:NewButton("üîó ‡∏•‡∏¥‡πâ‡∏á discord ‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤", "discord youtube invite to clipboard", function()
    setclipboard("https://discord.gg/5eUPMxveDr")
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "discord Invite",
        Text = "Copied to clipboard!",
        Duration = 3
    })
end)

-- Main Features Tab
local MainTab = Window:NewTab("‚ö° ‡∏ü‡∏¥‡∏ß‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å")
local MainSection = MainTab:NewSection("Game Enhancements")

-- X-ray toggle with improved functionality
local XrayStatus = false
local XrayToggle = MainSection:NewToggle("üîç X-ray Items & Enemies", "‡∏°‡∏≠‡∏á‡∏ó‡∏∞‡∏•‡∏∏‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏î‡πâ", function(state)
    XrayStatus = state
    
    if state then
        -- Function to determine color based on entity type
        local function getEntityColor(entity)
            local parentFolder = entity.Parent
            local entityName = entity.Name:lower()
            
            -- Items get gold color
            if parentFolder and parentFolder.Name == "RuntimeItems" then
                return Color3.fromRGB(255, 215, 0), Color3.fromRGB(255, 255, 255), 0.3, 0.6
            -- Enemies by type
            elseif entityName:find("RevolverOutlaw") or entityName:find("ShotgunOutlaw") or entityName:find("Wolf") then
                return Color3.fromRGB(255, 0, 0), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Red for dangerous enemies
            elseif entityName:find("Runner") then
                return Color3.fromRGB(0, 0, 255), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Blue for runners
            elseif entityName:find("runner") then
                return Color3.fromRGB(0, 0, 255), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Blue for runners
            elseif entityName:find("walker") then
                return Color3.fromRGB(0, 255, 0), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Green for walkers
            elseif entityName:find("Walker") then
                return Color3.fromRGB(0, 255, 0), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Green for walkers
            elseif entityName:find("vampire") then
                return Color3.fromRGB(128, 0, 128), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Purple for vampires
            elseif entityName:find("werewolf") then
                return Color3.fromRGB(169, 169, 169), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Gray for werewolves
            elseif entityName:find("Vampire") then
                return Color3.fromRGB(128, 0, 128), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Purple for vampires
            elseif entityName:find("Werewolf") then
                return Color3.fromRGB(169, 169, 169), Color3.fromRGB(255, 255, 255), 0.3, 0.6  -- Gray for werewolves
            end
            return nil
        end

        -- Process existing entities
        for _, obj in ipairs(game.Workspace:GetDescendants()) do
            if obj:IsA("Model") then
                local colors = {getEntityColor(obj)}
                if colors[1] then
                    AddHighlightToEntity(obj, colors[1], colors[2], colors[3], colors[4])
                end
            end
        end
        
        -- ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÄ‡∏≠‡∏ô‡∏ó‡∏¥‡∏ï‡∏µ‡πÉ‡∏´‡∏°‡πà
        local connection = game.Workspace.DescendantAdded:Connect(function(obj)
            if obj:IsA("Model") then
                local colors = {getEntityColor(obj)}
                if colors[1] then
                    AddHighlightToEntity(obj, colors[1], colors[2], colors[3], colors[4])
                end
            end
        end)
        table.insert(Connections, connection)
        
        -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
        XrayToggle:UpdateToggle("üîç X-ray ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° & ‡∏®‡∏±‡∏ï‡∏£‡∏π: ‡πÄ‡∏õ‡∏¥‡∏î")
        
        -- ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô X-ray",
            Text = "‡πÇ‡∏´‡∏°‡∏î‡∏°‡∏≠‡∏á‡∏ó‡∏∞‡∏•‡∏∏‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
            Duration = 3
        })
    else
        -- ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô X-ray
        for _, connection in pairs(Connections) do
            if connection == Connections[#Connections] then
                connection:Disconnect()
                table.remove(Connections, #Connections)
            end
        end
        
        RemoveAllHighlights()
        
        -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
        XrayToggle:UpdateToggle("üîç X-ray ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° & ‡∏®‡∏±‡∏ï‡∏£‡∏π: ‡∏õ‡∏¥‡∏î")
        
        -- ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô X-ray",
            Text = "‡πÇ‡∏´‡∏°‡∏î‡∏°‡∏≠‡∏á‡∏ó‡∏∞‡∏•‡∏∏‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î",
            Duration = 3
        })
    end
end)

local runService = game:GetService("RunService")
local replicatedStorage = game:GetService("ReplicatedStorage")

local DropToggle = MainSection:NewToggle("üì¶ ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°", "‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", function(state)
    if state then
        print("‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°")
        local dropItemRemote = replicatedStorage:WaitForChild("Remotes"):WaitForChild("DropItem")

        _G.AutoDropConnection = runService.Heartbeat:Connect(function()
            dropItemRemote:FireServer()
        end)
    else
        print("‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°")
        if _G.AutoDropConnection then
            _G.AutoDropConnection:Disconnect()
            _G.AutoDropConnection = nil
        end
    end
end)

local players = game:GetService("Players")
local player = players.LocalPlayer
local CollectRange = 20  -- ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
local CollectToggle
local runService = game:GetService("RunService")
local replicatedStorage = game:GetService("ReplicatedStorage")

MainSection:NewSlider("üìè ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°", "‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", 50, 5, function(value)
    CollectRange = value
    if _G.AutoCollectConnection then
        CollectToggle:UpdateToggle("üß≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ‡πÄ‡∏õ‡∏¥‡∏î (" .. CollectRange .. "m)")
    end
end)

CollectToggle = MainSection:NewToggle("üß≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", "‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", function(state)
    if state then
        print("‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local storeItemRemote = replicatedStorage:WaitForChild("Remotes"):WaitForChild("StoreItem")

        -- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
        _G.AutoCollectConnection = runService.Heartbeat:Connect(function()
            local runtimeItems = workspace:FindFirstChild("RuntimeItems")
            if not runtimeItems then return end

            for _, item in ipairs(runtimeItems:GetChildren()) do
                if item:IsA("Model") or item:IsA("Part") then
                    local itemPosition
                    if item:IsA("Model") then
                        local primaryPart = item.PrimaryPart
                        if primaryPart then
                            itemPosition = primaryPart.Position
                        else
                            itemPosition = item:GetPivot().Position
                        end
                    else
                        itemPosition = item.Position
                    end
                    
                    local distance = (rootPart.Position - itemPosition).Magnitude

                    if distance <= CollectRange then
                        storeItemRemote:FireServer(item)
                    end
                end
            end
        end)
    else
        print("‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
        -- ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        if _G.AutoCollectConnection then
            _G.AutoCollectConnection:Disconnect()
            _G.AutoCollectConnection = nil
        end
        CollectToggle:UpdateToggle("üß≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ‡∏õ‡∏¥‡∏î")
    end
end)

-- ‡πÅ‡∏ó‡πá‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡∏Å
local VisualTab = Window:NewTab("üåç ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏†‡∏≤‡∏û")
local VisualSection = VisualTab:NewSection("‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°")

-- ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ñ‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô
local BrightnessValue = 0.2
local BrightnessStatus = false
local BrightnessToggle

VisualSection:NewSlider("üí° ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á", "‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°", 1, 0.1, function(value)
    BrightnessValue = value
    
    if BrightnessStatus then
        -- ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
        game:GetService("Lighting").Brightness = BrightnessValue
        
        -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°
        BrightnessToggle:UpdateToggle("üí° ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô: ‡πÄ‡∏õ‡∏¥‡∏î (‡∏£‡∏∞‡∏î‡∏±‡∏ö " .. BrightnessValue .. ")")
    end
end)

BrightnessToggle = VisualSection:NewToggle("üí° ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á", "‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á", function(state)
    BrightnessStatus = state
    local Lighting = game:GetService("Lighting")
    
    if state then
        print("‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á")
        local ColorCorrection = Lighting:FindFirstChildOfClass("ColorCorrectionEffect")

        if ColorCorrection then
            -- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏ô
            if not _G.OriginalColorCorrection then
                _G.OriginalColorCorrection = {
                    Brightness = ColorCorrection.Brightness
                }
            end
            
            -- ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á
            ColorCorrection.Brightness = BrightnessValue
            print("‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        else
            print("‡πÑ‡∏°‡πà‡∏û‡∏ö ColorCorrectionEffect ‡πÉ‡∏ô Lighting")
        end

        -- ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏™‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
        Lighting.Brightness = 4
        Lighting.Ambient = Color3.fromRGB(255, 255, 255)
        Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
    else
        print("‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")
        -- ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏°
        Lighting.Brightness = OriginalSettings.Lighting.Brightness
        Lighting.Ambient = OriginalSettings.Lighting.Ambient
        Lighting.OutdoorAmbient = OriginalSettings.Lighting.OutdoorAmbient

        -- ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏µ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        local ColorCorrection = Lighting:FindFirstChildOfClass("ColorCorrectionEffect")
        if ColorCorrection and _G.OriginalColorCorrection then
            ColorCorrection.Brightness = _G.OriginalColorCorrection.Brightness
        end
    end
end)

-- ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏≠‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ñ‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á
local FogStatus = false
local FogDensity = 0
local FogToggle

VisualSection:NewSlider("üå´Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏≠‡∏Å", "‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏≠‡∏Å (0 = ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏≠‡∏Å)", 1, 0, function(value)
    FogDensity = value
    
    if FogStatus then
        -- ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏≠‡∏Å‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
        local Atmosphere = game:GetService("Lighting"):FindFirstChildOfClass("Atmosphere")
        if Atmosphere then
            Atmosphere.Density = FogDensity
        end
        
        -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°
        FogToggle:UpdateToggle("üå´Ô∏è ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏´‡∏°‡∏≠‡∏Å: ‡πÄ‡∏õ‡∏¥‡∏î (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô " .. FogDensity .. ")")
    end
end)

FogToggle = VisualSection:NewToggle("üå´Ô∏è ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏´‡∏°‡∏≠‡∏Å", "‡∏•‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô", function(state)
    FogStatus = state
    local Lighting = game:GetService("Lighting")
    local Atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
    
    if state then
        if Atmosphere then
            -- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡πÄ‡∏î‡∏¥‡∏°
            if not _G.OriginalAtmosphere then
                _G.OriginalAtmosphere = {
                    Density = Atmosphere.Density
                }
            end
            
            -- ‡∏•‡∏ö‡∏´‡∏°‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡πÄ‡∏õ‡πá‡∏ô 0
            Atmosphere.Density = FogDensity
            print("‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏≠‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")
        else
            print("‡πÑ‡∏°‡πà‡∏û‡∏ö Atmosphere ‡πÉ‡∏ô Lighting")
        end
    else
        print("‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")
        -- ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏°
        local Atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
        if Atmosphere and _G.OriginalAtmosphere then
            Atmosphere.Density = _G.OriginalAtmosphere.Density
        end
    end
end)

-- ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡πÄ‡∏Å‡∏°
VisualSection:NewButton("üåû ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô", "‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô", function()
    game:GetService("Lighting").ClockTime = 12
    
    -- ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡πâ‡∏ß",
        Text = "‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏ß‡∏±‡∏ô",
        Duration = 3
    })
end)

VisualSection:NewButton("üåú ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô", "‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô", function()
    game:GetService("Lighting").ClockTime = 0
    
    -- ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡πâ‡∏ß",
        Text = "‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô",
        Duration = 3
    })
end)

-- ‡πÅ‡∏ó‡πá‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á
local SettingsTab = Window:NewTab("‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")
local SettingsSection = SettingsTab:NewSection("‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ UI")

SettingsSection:NewKeybind("üîë ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏±‡∏î‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î UI", "‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ü‡∏ã", Enum.KeyCode.H, function()
    Library:ToggleUI()
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î UI",
        Text = "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ü‡∏ã",
        Duration = 2
    })
end)

local ThemeSection = SettingsTab:NewSection("‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏ò‡∏µ‡∏°")

-- ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏µ‡∏°
local themes = {
    ["‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô"] = CustomTheme,
    ["‡∏°‡∏´‡∏≤‡∏™‡∏°‡∏∏‡∏ó‡∏£"] = {
        SchemeColor = Color3.fromRGB(35, 170, 255),
        Background = Color3.fromRGB(10, 30, 45),
        Header = Color3.fromRGB(5, 20, 35),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(20, 40, 60)
    },
    ["‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô"] = {
        SchemeColor = Color3.fromRGB(100, 50, 255),
        Background = Color3.fromRGB(5, 5, 15),
        Header = Color3.fromRGB(10, 10, 20),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(20, 20, 30)
    },
    ["‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏´‡∏°‡∏π"] = {
        SchemeColor = Color3.fromRGB(220, 40, 40),
        Background = Color3.fromRGB(25, 5, 5),
        Header = Color3.fromRGB(35, 10, 10),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(45, 20, 20)
    },
    ["‡∏õ‡πà‡∏≤"] = {
        SchemeColor = Color3.fromRGB(40, 180, 60),
        Background = Color3.fromRGB(10, 25, 15),
        Header = Color3.fromRGB(5, 20, 10),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(20, 45, 25)
    },
    ["‡∏ó‡∏≠‡∏á"] = {
        SchemeColor = Color3.fromRGB(255, 200, 0),
        Background = Color3.fromRGB(20, 15, 5),
        Header = Color3.fromRGB(25, 20, 5),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(40, 30, 10)
    }
}

ThemeSection:NewDropdown("üé® ‡∏ò‡∏µ‡∏°‡∏™‡∏µ", "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á UI", {"‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô", "‡∏°‡∏´‡∏≤‡∏™‡∏°‡∏∏‡∏ó‡∏£", "‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏∑‡∏ô", "‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏´‡∏°‡∏π", "‡∏õ‡πà‡∏≤", "‡∏ó‡∏≠‡∏á"}, function(selected)
    if themes[selected] then
        for property, color in pairs(themes[selected]) do
            Library:ChangeColor(property, color)
        end
        
        -- ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡πÅ‡∏•‡πâ‡∏ß",
            Text = "‡πÉ‡∏ä‡πâ‡∏ò‡∏µ‡∏° " .. selected .. " ‡πÅ‡∏•‡πâ‡∏ß",
            Duration = 3
        })
    end
end)

-- ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
local ResetSection = SettingsTab:NewSection("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï")

ResetSection:NewButton("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô", function()

    -- Reset X-ray
    if XrayStatus then
        XrayStatus = false
        RemoveAllHighlights()
        XrayToggle:UpdateToggle("üîç X-ray ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÅ‡∏•‡∏∞‡∏®‡∏±‡∏ï‡∏£‡∏π: ‡∏õ‡∏¥‡∏î")
    end

    -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    if _G.AutoCollectConnection then
        _G.AutoCollectConnection:Disconnect()
        _G.AutoCollectConnection = nil
        CollectToggle:UpdateToggle("üß≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ‡∏õ‡∏¥‡∏î")
    end
    
    -- Reset Auto Drop
    if _G.AutoDropConnection then
        _G.AutoDropConnection:Disconnect()
        _G.AutoDropConnection = nil
        DropToggle:UpdateToggle("üì¶ ‡∏Å‡∏≤‡∏£‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ‡∏õ‡∏¥‡∏î")
    end
    
    -- Reset Brightness
    if BrightnessStatus then
        BrightnessStatus = false
        local Lighting = game:GetService("Lighting")
        
        Lighting.Brightness = OriginalSettings.Lighting.Brightness
        Lighting.Ambient = OriginalSettings.Lighting.Ambient
        Lighting.OutdoorAmbient = OriginalSettings.Lighting.OutdoorAmbient
        
        local ColorCorrection = Lighting:FindFirstChildOfClass("ColorCorrectionEffect")
        if ColorCorrection and _G.OriginalColorCorrection then
            ColorCorrection.Brightness = _G.OriginalColorCorrection.Brightness
        end
        
        BrightnessToggle:UpdateToggle("üí° ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô: ‡∏õ‡∏¥‡∏î")
    end
    
    
    -- Reset Fog
    if FogStatus then
        FogStatus = false
        local Atmosphere = game:GetService("Lighting"):FindFirstChildOfClass("Atmosphere")
        
        if Atmosphere and _G.OriginalAtmosphere then
            Atmosphere.Density = _G.OriginalAtmosphere.Density
        end
        
        FogToggle:UpdateToggle("üå´Ô∏è ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏´‡∏°‡∏≠‡∏Å: ‡∏õ‡∏¥‡∏î")
    end
    
    -- ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    DisconnectAll()
    
    -- ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Reset Complete",
        Text = "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô",
        Duration = 3
    })
    end)
    

-- Credits tab
local CreditsTab = Window:NewTab("üëë ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï")
local CreditsSection = CreditsTab:NewSection("Special Thanks")

CreditsSection:NewLabel("üåü ‡∏ó‡∏≥‡πÇ‡∏î‡∏¢: Snowfarn")
CreditsSection:NewLabel("üõ†Ô∏è UI ‡∏ó‡∏≥‡πÇ‡∏î‡∏¢ : Snowfarn")
CreditsSection:NewLabel("üîß ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô : ‡∏ó‡∏î‡∏™‡∏≠‡∏ö")

-- Create Mobile UI Toggle Button
-- This will create a floating button for mobile users
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Name = "Snowfarn code MobileToggle"

local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "MobileToggle"
ToggleButton.Parent = ScreenGui
ToggleButton.AnchorPoint = Vector2.new(1, 0) -- Anchor to top right
ToggleButton.Position = UDim2.new(0.98, 0, 0.1, 0) -- Position in top right area
ToggleButton.Size = UDim2.new(0, 50, 0, 50)
ToggleButton.BackgroundColor3 = Color3.fromRGB(85, 170, 255) -- Match theme blue
ToggleButton.BorderSizePixel = 0
ToggleButton.Text = "üì±"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 24
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.AutoButtonColor = true

-- Make the button rounded
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(1, 0) -- Fully rounded (circle)
UICorner.Parent = ToggleButton

-- Add shadow for better visibility
local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(0, 0, 0)
UIStroke.Transparency = 0.5
UIStroke.Thickness = 2
UIStroke.Parent = ToggleButton

-- Add a small gradient for style
local UIGradient = Instance.new("UIGradient")
UIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(85, 170, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(60, 120, 220))
})
UIGradient.Parent = ToggleButton

-- Add touch effect
local TouchRipple = Instance.new("Frame")
TouchRipple.Name = "TouchRipple"
TouchRipple.Parent = ToggleButton
TouchRipple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TouchRipple.BackgroundTransparency = 0.8
TouchRipple.BorderSizePixel = 0
TouchRipple.Size = UDim2.new(1, 0, 1, 0)
TouchRipple.Visible = false
TouchRipple.ZIndex = 2

local RippleCorner = Instance.new("UICorner")
RippleCorner.CornerRadius = UDim.new(1, 0)
RippleCorner.Parent = TouchRipple

-- Make the button draggable for better user experience
local isDragging = false
local dragInput
local dragStart
local startPos

local function updatePosition(input)
    local delta = input.Position - dragStart
    ToggleButton.Position = UDim2.new(
        startPos.X.Scale, 
        startPos.X.Offset + delta.X, 
        startPos.Y.Scale, 
        startPos.Y.Offset + delta.Y
    )
end

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then

        TouchRipple.Visible = true
        

        if not isDragging then
            Library:ToggleUI()
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "UI Toggled",
                Text = "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π",
                Duration = 2
            })
        end
        
        -- Handle dragging
        isDragging = true
        dragStart = input.Position
        startPos = ToggleButton.Position
        
        -- Hide ripple effect after a short delay
        spawn(function()
            wait(0.3)
            TouchRipple.Visible = false
        end)
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                isDragging = false
            end
        end)
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
        if isDragging then
            updatePosition(input)
        end
    end
end)

-- Opening notification
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "‚ú® Snowfarn code Premium ‚ú®",
    Text = "‡∏î‡∏≤‡∏ß‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß",
    Duration = 5
})
